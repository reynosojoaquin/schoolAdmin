@page "/Provincias"

@using SchoolControl.Shared;
@using SchoolControl.Client.Services;
@using CurrieTechnologies.Razor.SweetAlert2;

@inject SweetAlertService Swal;
@inject IProvinciaServices ProvinciaServices;
<div class="card mt-4">
    <div class="card-header">
        <h3 class="card-title">Indice de provincias</h3>
    </div>
    <div class="card-body">
    <div class="container mt-2">
    <!-- Fila para el filtro y el botón -->
    <div class="row mb-1">
        <div class="col-md-4 text-start">
            <!-- Botón para alguna acción -->
            <button class="btn btn-primary" @onclick="showCreatePage">
                <i class="fas fa-plus"></i> Añadir Nueva
            </button>
        </div>
        <div class="col-md-8">
            <!-- Campo para filtrar datos -->
            <input type="text" id="filterInput" class="form-control" placeholder="Filtrar datos...">
        </div>
       
    </div>
    </div>
<table class="table table-striped table-responsive ">
    <thead>
    <th>Id</th>
    <th>Nombre</th>
    <th>Acciones</th>
    </thead>
    <tbody>
        @if (ListaProvincias == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img style="with:50px" src="https://media.tenor.com/2BLI5EO7yVAAAAAi/loading-image.gif" />
                </td>
            </tr>
        }
        else
        {
            foreach(var item in ListaProvincias)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Nombre</td>
                    <td>
                        <button class="btn btn-sm btn-info" href="addProvincia/@item.Id">
                            <i class="fas fa-edit"></i> Editar
                        </button>
                        <button class="btn btn-sm btn-danger"@onclick="(()=> eliminar(item.Id))">
                            <i class="fas fa-trash-alt"></i>Eliminar
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
    <div class="row">
        <div class="col-12">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Anterior</a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Siguiente</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</table>
</div>
</div>




@code {
    List<ProvinciaDTO>? ListaProvincias = null;
    [Parameter]
    public bool showFirstPage { get; set; }
    [Parameter]
    public EventCallback<string> OnValueSentBack { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaProvincias = await ProvinciaServices.Lista();
    }

    private async Task eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
        {
          Title = "Eliminar Provincia",
          Text  = "Deseas eliminar la provincia",
          Icon  = SweetAlertIcon.Question,
          ShowCancelButton = true
        });

        if (resultado.IsConfirmed)
        {
            var eliminado = await ProvinciaServices.Eliminar(id);
            if (eliminado)
                ListaProvincias = ListaProvincias.FindAll(e => e.Id != id);
        }
    }
    public void showCreatePage()
    {
        SendBackValue("true,p");
    }
    public void SendBackValue(string value)
    {
        OnValueSentBack.InvokeAsync(value);
    }
}
